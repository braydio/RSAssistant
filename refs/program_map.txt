.
└── utils
    ├── config_utils.py
    │   ├── load_config(config_path=CONFIG_PATH)
    │   ├── get_account_nickname(broker, account_number)
    │   ├── all_brokers(filename=ACCOUNT_MAPPING_FILE)
    │   └── load_account_mappings(filename=ACCOUNT_MAPPING_FILE)
    │
    ├── watch_utils.py
    │   ├── # Helper functions
    │   │   ├── save_watch_list()
    │   │   ├── load_watch_list()
    │   │   ├── update_watchlist_with_stock(ticker)
    │   │   ├── load_account_mappings(filename=ACCOUNT_MAPPING_FILE) -- IMPORT THIS FROM config_utils.py INSTEAD
    │   │   └── send_chunked_message(ctx, message)
    │   │
    │   └── # Main functions
    │       ├── load_watch_list(filename=WATCHLIST_FILE)
    │       ├── watch_ticker(ctx, ticker)
    │       ├── track_ticker_progress(ctx, ticker)
    │       ├── get_watch_status(ctx, ticker)
    │       ├── list_watched_tickers(ctx)
    │       └── stop_watching(ctx, ticker)
    │   
    ├── csv_utils.py
    │   ├── ensure_csv_file_exists(file_path, headers)
    │   ├── save_order_to_csv(broker_name, account_number, order_type, quantity, stock)
    │   ├── update_holdings_data(order_type, broker_name, account_number, stock, quantity, price)
    │   ├── save_holdings_to_csv(holdings_data, broker)
    │   ├── get_last_stock_price(stock)
    │   ├── read_holdings_log(filename=HOLDINGS_LOG_FILE)
    │   └── get_holdings_for_summary(file_path=HOLDINGS_LOG_CSV) -- DELETE MAYBE
    │
    ├── parsing_utils.py
    │   ├── parse_order_message(message_content)
    │   ├── parse_embed_message(embed, holdings_data)
    │   ├── profile(ctx, broker_name)
    │   └── send_large_message(ctx, content, chunk_size=2000)
    │  
    ├── excel_utils.py
    │   ├── load_excel_log(file_path)
    │   ├── add_stock_to_excel_log(ticker, excel_file_path)
    │   ├── copy_column(worksheet, source_col, target_col)
    │   ├── clear_column_values(worksheet, column)
    │   ├── update_excel_log_sell(sell_orders, excel_file_path)
    │   └── update_excel_log_buy(buy_orders, excel_file_path)
    │  
    ├── example_utils.py
    │   ├──
    └── 

Updated Command Functions Plan
Main commands needed along with the utility functions that will support them:
-- # 1 = DONE --
1. Add a Stock to the Watchlist
Command: ..watch(ticker)

Purpose: Add a new stock to the watchlist for all accounts.
Steps:
Add the stock to the watchlist.
Initialize the stock in each account with the default state (waiting).
Save the watchlist.
Optionally, log the stock in an Excel file for easy tracking.
Supporting Utility: save_watch_list(), update_watchlist_with_stock()


-- # 2 = DONE --
Command: watchlistall

Purpose: Display all currently tracked stocks.
Steps:
Load the watchlist.
Return a list of all tickers currently being tracked.
Supporting Utility: load_watch_list()


3. Return the Status of Each Stock in the Watchlist
Command: get_stock_status()
-- cLOSE TO DONE --
Purpose: Provide the status of each stock (number of accounts that have bought, are holding, or have sold the stock).
Steps:
Iterate through the watchlist for each ticker.
Count the number of accounts at each stage (buy, hold, sold).
Display the summary for each stock.
Supporting Utility: update_watch_list(), get_watch_status(), track_ticker_progress()
4. Return Broker Summary by Accounts
Command: broker_account_summary(broker_name)

-- NOT REALLY DONE YET --
Purpose: Provide a breakdown of total holdings and value for each account under a broker.
Steps:
Load account mappings and holdings.
Sum up the total number of shares and values for each account under the specified broker.
Display the summary.
Supporting Utility: get_account_nickname(), read_holdings_log()


5. Return Broker Summary by Total Holdings
Command: broker_holdings_summary(broker_name)

Purpose: Display total holdings across all accounts for a broker.
Steps:
Load holdings for each account under the specified broker.
Sum up the holdings and display a comprehensive summary.
Supporting Utility: read_holdings_log(), save_holdings_to_csv()

            DONE
6. Remove Stock from Watchlist Once Complete
Command: remove_stock_from_watchlist(ticker)

Purpose: Remove a stock from the watchlist once all shares have been sold across all accounts.
Steps:
Check if the stock has been sold in all accounts.
If sold, remove the stock from the watchlist.
Save the updated watchlist.
Supporting Utility: save_watch_list(), stop_watching()